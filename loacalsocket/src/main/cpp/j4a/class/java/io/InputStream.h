/*
 * Copyright (C) 2015 Zhang Rui <bbcallen@gmail.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * https://github.com/Bilibili/jni4android
 * This file is automatically generated by jni4android, do not modify.
 */

#ifndef J4A__java_io_InputStream__H
#define J4A__java_io_InputStream__H

#include "j4a/j4a_base.h"

jint J4AC_java_io_InputStream__read(JNIEnv *env, jobject thiz, jbyteArray b, jint off, jint len);
jint J4AC_java_io_InputStream__read__catchAll(JNIEnv *env, jobject thiz, jbyteArray b, jint off, jint len);
jlong J4AC_java_io_InputStream__skip(JNIEnv *env, jobject thiz, jlong n);
jlong J4AC_java_io_InputStream__skip__catchAll(JNIEnv *env, jobject thiz, jlong n);
jint J4AC_java_io_InputStream__available(JNIEnv *env, jobject thiz);
jint J4AC_java_io_InputStream__available__catchAll(JNIEnv *env, jobject thiz);
void J4AC_java_io_InputStream__close(JNIEnv *env, jobject thiz);
void J4AC_java_io_InputStream__close__catchAll(JNIEnv *env, jobject thiz);
void J4AC_java_io_InputStream__mark(JNIEnv *env, jobject thiz, jint readlimit);
void J4AC_java_io_InputStream__mark__catchAll(JNIEnv *env, jobject thiz, jint readlimit);
void J4AC_java_io_InputStream__reset(JNIEnv *env, jobject thiz);
void J4AC_java_io_InputStream__reset__catchAll(JNIEnv *env, jobject thiz);
jboolean J4AC_java_io_InputStream__markSupported(JNIEnv *env, jobject thiz);
jboolean J4AC_java_io_InputStream__markSupported__catchAll(JNIEnv *env, jobject thiz);
int J4A_loadClass__J4AC_java_io_InputStream(JNIEnv *env);

#define J4A_HAVE_SIMPLE__J4AC_java_io_InputStream

#define J4AC_InputStream__read J4AC_java_io_InputStream__read
#define J4AC_InputStream__read__catchAll J4AC_java_io_InputStream__read__catchAll
#define J4AC_InputStream__skip J4AC_java_io_InputStream__skip
#define J4AC_InputStream__skip__catchAll J4AC_java_io_InputStream__skip__catchAll
#define J4AC_InputStream__available J4AC_java_io_InputStream__available
#define J4AC_InputStream__available__catchAll J4AC_java_io_InputStream__available__catchAll
#define J4AC_InputStream__close J4AC_java_io_InputStream__close
#define J4AC_InputStream__close__catchAll J4AC_java_io_InputStream__close__catchAll
#define J4AC_InputStream__mark J4AC_java_io_InputStream__mark
#define J4AC_InputStream__mark__catchAll J4AC_java_io_InputStream__mark__catchAll
#define J4AC_InputStream__reset J4AC_java_io_InputStream__reset
#define J4AC_InputStream__reset__catchAll J4AC_java_io_InputStream__reset__catchAll
#define J4AC_InputStream__markSupported J4AC_java_io_InputStream__markSupported
#define J4AC_InputStream__markSupported__catchAll J4AC_java_io_InputStream__markSupported__catchAll
#define J4A_loadClass__J4AC_InputStream J4A_loadClass__J4AC_java_io_InputStream

#endif//J4A__java_io_InputStream__H
